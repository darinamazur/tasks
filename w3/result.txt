COMMENT: /*this is
comment*/
KEYWORD: for
PUNCTUATION: (
VARIABLE: $i
OPERATOR: =
NUMBER: 1
PUNCTUATION: ;
VARIABLE: $i
OPERATOR: <=
NUMBER: 4
PUNCTUATION: ;
VARIABLE: $i
OPERATOR: ++
PUNCTUATION: )
PUNCTUATION: {
VARIABLE: $bytes
OPERATOR: =
IDENTIFIER: openssl_random_pseudo_bytes
PUNCTUATION: (
VARIABLE: $i
PUNCTUATION: ,
VARIABLE: $cstrong
PUNCTUATION: )
PUNCTUATION: ;
VARIABLE: $hex
OPERATOR: =
IDENTIFIER: bin2hex
PUNCTUATION: (
VARIABLE: $bytes
PUNCTUATION: )
PUNCTUATION: ;
ERROR: $1a
OPERATOR: =
NUMBER: 4
PUNCTUATION: ;
KEYWORD: echo
LITERAL: "Lengths: Bytes: 
VARIABLE: $i
LITERAL: $i and Hex: "
OPERATOR: .
IDENTIFIER: strlen
PUNCTUATION: (
VARIABLE: $hex
PUNCTUATION: )
OPERATOR: .
IDENTIFIER: PHP_EOL
PUNCTUATION: ;
IDENTIFIER: var_dump
PUNCTUATION: (
VARIABLE: $hex
PUNCTUATION: )
PUNCTUATION: ;
VARIABLE: $hex1
OPERATOR: =
NUMBER: 0x047B
PUNCTUATION: ;
VARIABLE: $binary
OPERATOR: =
NUMBER: 0b00010101
PUNCTUATION: ;
VARIABLE: $flt
OPERATOR: =
NUMBER: 10.25363
PUNCTUATION: ;
VARIABLE: $octal
OPERATOR: =
NUMBER: 0345733
PUNCTUATION: ;
VARIABLE: $wrong_octal
OPERATOR: =
ERROR: 05783
PUNCTUATION: ;
VARIABLE: $var
OPERATOR: =
ERROR: 486t8
PUNCTUATION: ;
VARIABLE: $str
OPERATOR: =
LITERAL: "
VARIABLE: $var
LITERAL: "
PUNCTUATION: ;
VARIABLE: $test
OPERATOR: =
NUMBER: 8
OPERATOR: /
NUMBER: 2
PUNCTUATION: ;
VARIABLE: $str
OPERATOR: =
LITERAL: "I'm"
PUNCTUATION: ;
VARIABLE: $a
OPERATOR: +=
VARIABLE: $b
PUNCTUATION: ;
VARIABLE: $b
OPERATOR: =
VARIABLE: $a
OPERATOR: **
NUMBER: 5
PUNCTUATION: ;
VARIABLE: $f
OPERATOR: =
VARIABLE: $a
OPERATOR: ><
VARIABLE: $b
PUNCTUATION: ;
VARIABLE: $h
OPERATOR: =
VARIABLE: $f
OPERATOR: xor
VARIABLE: $a
PUNCTUATION: ;
IDENTIFIER: var_dump
PUNCTUATION: (
VARIABLE: $cstrong
PUNCTUATION: )
PUNCTUATION: ;
COMMENT: #so'mething good echo if for $var
KEYWORD: echo
IDENTIFIER: PHP_EOL
PUNCTUATION: ;
COMMENT: //end____BJOJMKJBHB$fhkewjnfk;;
VARIABLE: $var
PUNCTUATION: [
ERROR: 1str
PUNCTUATION: ]
PUNCTUATION: ;
LITERAL: "
PUNCTUATION: {
VARIABLE: $var
PUNCTUATION: [
NUMBER: 5
PUNCTUATION: ]
PUNCTUATION: ->
PUNCTUATION: {
VARIABLE: $var1
PUNCTUATION: }
ERROR: "
LITERAL: $var1"
PUNCTUATION: ;
PUNCTUATION: }
